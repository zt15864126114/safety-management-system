{"remainingRequest":"D:\\safety-management-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\safety-management-system\\src\\views\\Reports.vue?vue&type=style&index=0&id=ff4e9e16&scoped=true&lang=css","dependencies":[{"path":"D:\\safety-management-system\\src\\views\\Reports.vue","mtime":1735549443842},{"path":"D:\\safety-management-system\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\safety-management-system\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\safety-management-system\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\safety-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\safety-management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucmVwb3J0cyB7DQogIHBhZGRpbmc6IDIwcHg7DQp9DQoNCi5zdGF0LWNhcmQgew0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIHBhZGRpbmc6IDIwcHg7DQp9DQoNCi5zdGF0LXZhbHVlIHsNCiAgZm9udC1zaXplOiAyNHB4Ow0KICBmb250LXdlaWdodDogYm9sZDsNCiAgY29sb3I6ICM0MDlFRkY7DQp9DQoNCi5zdGF0LXRpdGxlIHsNCiAgbWFyZ2luLXRvcDogMTBweDsNCiAgY29sb3I6ICM2NjY7DQp9DQoNCi5jaGFydC1oZWFkZXIgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQp9DQoNCi5wYWdpbmF0aW9uLWNvbnRhaW5lciB7DQogIG1hcmdpbi10b3A6IDIwcHg7DQogIHRleHQtYWxpZ246IHJpZ2h0Ow0KfQ0KDQouZWwtY2FyZCB7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQoNCi5lbC1jYXJkOmxhc3QtY2hpbGQgew0KICBtYXJnaW4tYm90dG9tOiAwOw0KfQ0K"},{"version":3,"sources":["Reports.vue"],"names":[],"mappings":";AA6XA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Reports.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"reports\">\r\n    <!-- 统计卡片 -->\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"6\" v-for=\"(item, index) in statistics\" :key=\"index\">\r\n        <el-card shadow=\"hover\" class=\"stat-card\">\r\n          <div class=\"stat-value\">{{ item.value }}</div>\r\n          <div class=\"stat-title\">{{ item.title }}</div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 图表区域 -->\r\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\r\n      <!-- 巡检完成率趋势图 -->\r\n      <el-col :span=\"12\">\r\n        <el-card>\r\n          <div slot=\"header\" class=\"chart-header\">\r\n            <span>巡检完成率趋势</span>\r\n            <el-radio-group v-model=\"chartTimeRange\" size=\"small\">\r\n              <el-radio-button label=\"week\">周</el-radio-button>\r\n              <el-radio-button label=\"month\">月</el-radio-button>\r\n              <el-radio-button label=\"year\">年</el-radio-button>\r\n            </el-radio-group>\r\n          </div>\r\n          <div id=\"completionChart\" style=\"height: 300px;\"></div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <!-- 问题分布图 -->\r\n      <el-col :span=\"12\">\r\n        <el-card>\r\n          <div slot=\"header\" class=\"chart-header\">\r\n            <span>问题类型分布</span>\r\n            <el-select v-model=\"issueChartType\" size=\"small\" style=\"width: 120px\">\r\n              <el-option label=\"饼图\" value=\"pie\"></el-option>\r\n              <el-option label=\"柱状图\" value=\"bar\"></el-option>\r\n            </el-select>\r\n          </div>\r\n          <div id=\"issueChart\" style=\"height: 300px;\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 详细数据表格 -->\r\n    <el-card style=\"margin-top: 20px;\">\r\n      <div slot=\"header\">\r\n        <span>巡检数据明细</span>\r\n      </div>\r\n      <el-table :data=\"inspectionData\" style=\"width: 100%\">\r\n        <el-table-column prop=\"date\" label=\"日期\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"area\" label=\"巡检区域\" width=\"150\"></el-table-column>\r\n        <el-table-column prop=\"inspector\" label=\"巡检人员\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"total\" label=\"检查项数\" width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"completed\" label=\"完成项数\" width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"rate\" label=\"完成率\">\r\n          <template slot-scope=\"scope\">\r\n            <el-progress :percentage=\"scope.row.rate\" :color=\"getProgressColor\"></el-progress>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"currentPage\"\r\n            :page-sizes=\"[10, 20, 50, 100]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 报表导出 -->\r\n    <el-card style=\"margin-top: 20px;\">\r\n      <div slot=\"header\">\r\n        <span>报表导出</span>\r\n      </div>\r\n      <el-form :inline=\"true\" :model=\"exportForm\" ref=\"exportForm\" :rules=\"exportRules\">\r\n        <el-form-item label=\"报表类型\" prop=\"type\">\r\n          <el-select v-model=\"exportForm.type\" placeholder=\"请选择报表类型\">\r\n            <el-option label=\"巡检统计报表\" value=\"inspection\"></el-option>\r\n            <el-option label=\"问题统计报表\" value=\"issue\"></el-option>\r\n            <el-option label=\"完整报表\" value=\"full\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"时间范围\" prop=\"dateRange\">\r\n          <el-date-picker\r\n              v-model=\"exportForm.dateRange\"\r\n              type=\"daterange\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n              value-format=\"yyyy-MM-dd\">\r\n          </el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleExport\">导出报表</el-button>\r\n          <el-button @click=\"resetExportForm\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nimport * as XLSX from 'xlsx'\r\nimport FileSaver from 'file-saver'\r\n\r\nexport default {\r\n  name: 'Reports',\r\n  data() {\r\n    return {\r\n      // 统计卡片数据\r\n      statistics: [\r\n        { title: '本月巡检总数', value: '286' },\r\n        { title: '发现问题数', value: '15' },\r\n        { title: '平均完成率', value: '98.5%' },\r\n        { title: '待处理问题', value: '3' }\r\n      ],\r\n      // 图表控制\r\n      chartTimeRange: 'week',\r\n      issueChartType: 'pie',\r\n      // 表格数据\r\n      inspectionData: [],\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      // 导出表单\r\n      exportForm: {\r\n        type: '',\r\n        dateRange: []\r\n      },\r\n      exportRules: {\r\n        type: [\r\n          { required: true, message: '请选择报表类型', trigger: 'change' }\r\n        ],\r\n        dateRange: [\r\n          { required: true, message: '请选择时间范围', trigger: 'change' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    getProgressColor() {\r\n      return function(percentage) {\r\n        if (percentage < 70) return '#F56C6C'\r\n        if (percentage < 90) return '#E6A23C'\r\n        return '#67C23A'\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initCharts()\r\n    this.fetchTableData()\r\n  },\r\n  methods: {\r\n    // 初始化图表\r\n    initCharts() {\r\n      this.initCompletionChart()\r\n      this.initIssueChart()\r\n    },\r\n    // 初始化完成率趋势图\r\n    initCompletionChart() {\r\n      const chart = echarts.init(document.getElementById('completionChart'))\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: '{b}: {c}%'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          min: 80,\r\n          max: 100,\r\n          axisLabel: {\r\n            formatter: '{value}%'\r\n          }\r\n        },\r\n        series: [{\r\n          name: '完成率',\r\n          type: 'line',\r\n          smooth: true,\r\n          data: [95, 98, 92, 96, 97, 99, 93],\r\n          areaStyle: {\r\n            opacity: 0.3\r\n          },\r\n          itemStyle: {\r\n            color: '#409EFF'\r\n          }\r\n        }]\r\n      }\r\n      chart.setOption(option)\r\n      window.addEventListener('resize', () => chart.resize())\r\n    },\r\n    // 初始化问题分布图\r\n    initIssueChart() {\r\n      const chart = echarts.init(document.getElementById('issueChart'))\r\n      const data = [\r\n        { value: 5, name: '设备故障' },\r\n        { value: 3, name: '安全隐患' },\r\n        { value: 4, name: '环境问题' },\r\n        { value: 2, name: '操作违规' },\r\n        { value: 1, name: '其他' }\r\n      ]\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{b}: {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left'\r\n        },\r\n        series: [\r\n          {\r\n            type: this.issueChartType,\r\n            radius: this.issueChartType === 'pie' ? '50%' : undefined,\r\n            data: data,\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      chart.setOption(option)\r\n      window.addEventListener('resize', () => chart.resize())\r\n    },\r\n    // 获取表格数据\r\n    fetchTableData() {\r\n      // 模拟数据\r\n      this.inspectionData = Array(20).fill(null).map((_, index) => ({\r\n        date: `2024-01-${String(index + 1).padStart(2, '0')}`,\r\n        area: `生产区域${index % 3 + 1}`,\r\n        inspector: ['张三', '李四', '王五'][index % 3],\r\n        total: 20,\r\n        completed: 18 + Math.floor(Math.random() * 3),\r\n        rate: 90 + Math.floor(Math.random() * 10)\r\n      }))\r\n      this.total = this.inspectionData.length\r\n    },\r\n    // 分页处理\r\n    handleSizeChange(val) {\r\n      this.pageSize = val\r\n      this.fetchTableData()\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val\r\n      this.fetchTableData()\r\n    },\r\n    // 导出报表\r\n    handleExport() {\r\n      this.$refs.exportForm.validate(valid => {\r\n        if (valid) {\r\n          const { type, dateRange } = this.exportForm\r\n          const workbook = XLSX.utils.book_new()\r\n\r\n          // 生成巡检数据\r\n          if (type === 'inspection' || type === 'full') {\r\n            const inspectionWs = XLSX.utils.json_to_sheet([\r\n              ['日期', '巡检区域', '巡检人员', '检查项数', '完成项数', '完成率'],\r\n              ...this.inspectionData.map(item => [\r\n                item.date,\r\n                item.area,\r\n                item.inspector,\r\n                item.total,\r\n                item.completed,\r\n                `${item.rate}%`\r\n              ])\r\n            ])\r\n            XLSX.utils.book_append_sheet(workbook, inspectionWs, '巡检统计')\r\n          }\r\n\r\n          // 生成问题数据\r\n          if (type === 'issue' || type === 'full') {\r\n            const issueData = [\r\n              { date: '2024-01-20', type: '设备故障', location: '生产区A', status: '已处理' },\r\n              { date: '2024-01-21', type: '安全隐患', location: '仓储区B', status: '处理中' },\r\n              { date: '2024-01-22', type: '环境问题', location: '生产区C', status: '待处理' }\r\n            ]\r\n            const issueWs = XLSX.utils.json_to_sheet([\r\n              ['日期', '问题类型', '位置', '状态'],\r\n              ...issueData.map(item => [\r\n                item.date,\r\n                item.type,\r\n                item.location,\r\n                item.status\r\n              ])\r\n            ])\r\n            XLSX.utils.book_append_sheet(workbook, issueWs, '问题统计')\r\n          }\r\n\r\n          // 添加统计信息\r\n          const summaryWs = XLSX.utils.json_to_sheet([\r\n            ['报表生成时间', new Date().toLocaleString()],\r\n            ['统计周期', `${dateRange[0]} 至 ${dateRange[1]}`],\r\n            ['巡检完成率', '98.5%'],\r\n            ['问题处理率', '85%']\r\n          ])\r\n          XLSX.utils.book_append_sheet(workbook, summaryWs, '统计信息')\r\n\r\n          // 设置列宽\r\n          const wscols = [\r\n            { wch: 15 },\r\n            { wch: 12 },\r\n            { wch: 12 },\r\n            { wch: 12 },\r\n            { wch: 12 },\r\n            { wch: 12 }\r\n          ]\r\n          if (workbook.Sheets['巡检统计']) {\r\n            workbook.Sheets['巡检统计']['!cols'] = wscols\r\n          }\r\n          if (workbook.Sheets['问题统计']) {\r\n            workbook.Sheets['问题统计']['!cols'] = wscols\r\n          }\r\n\r\n          // 导出文件\r\n          const wopts = {\r\n            bookType: 'xlsx',\r\n            bookSST: false,\r\n            type: 'binary'\r\n          }\r\n          const wbout = XLSX.write(workbook, wopts)\r\n          const fileName = `安全管理系统报表_${dateRange[0]}_${dateRange[1]}.xlsx`\r\n\r\n          FileSaver.saveAs(\r\n              new Blob([this.s2ab(wbout)], { type: 'application/octet-stream' }),\r\n              fileName\r\n          )\r\n\r\n          this.$message.success('报表导出成功')\r\n        } else {\r\n          this.$message.warning('请完善导出信息')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 重置导出表单\r\n    resetExportForm() {\r\n      this.$refs.exportForm.resetFields()\r\n    },\r\n    // 字符串转ArrayBuffer\r\n    s2ab(s) {\r\n      const buf = new ArrayBuffer(s.length)\r\n      const view = new Uint8Array(buf)\r\n      for (let i = 0; i < s.length; i++) {\r\n        view[i] = s.charCodeAt(i) & 0xFF\r\n      }\r\n      return buf\r\n    }\r\n  },\r\n  watch: {\r\n    chartTimeRange() {\r\n      this.initCompletionChart()\r\n    },\r\n    issueChartType() {\r\n      this.initIssueChart()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.reports {\r\n  padding: 20px;\r\n}\r\n\r\n.stat-card {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #409EFF;\r\n}\r\n\r\n.stat-title {\r\n  margin-top: 10px;\r\n  color: #666;\r\n}\r\n\r\n.chart-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n}\r\n\r\n.el-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-card:last-child {\r\n  margin-bottom: 0;\r\n}\r\n</style>"]}]}