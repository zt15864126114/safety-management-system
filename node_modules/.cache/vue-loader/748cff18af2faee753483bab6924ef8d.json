{"remainingRequest":"D:\\safety-management-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\safety-management-system\\src\\views\\Statistics.vue?vue&type=style&index=0&id=6f2a995d&scoped=true&lang=css","dependencies":[{"path":"D:\\safety-management-system\\src\\views\\Statistics.vue","mtime":1735608054016},{"path":"D:\\safety-management-system\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\safety-management-system\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\safety-management-system\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\safety-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\safety-management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouc3RhdGlzdGljcyB7DQogIHBhZGRpbmc6IDIwcHg7DQp9DQoNCi5kYXRhLW92ZXJ2aWV3IHsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCn0NCg0KLmRhdGEtY2FyZCB7DQogIGhlaWdodDogMTIwcHg7DQogIGN1cnNvcjogcG9pbnRlcjsNCiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7DQp9DQoNCi5kYXRhLWNhcmQ6aG92ZXIgew0KICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7DQp9DQoNCi5kYXRhLWhlYWRlciB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCn0NCg0KLmRhdGEtdGl0bGUgew0KICBmb250LXNpemU6IDE2cHg7DQogIGNvbG9yOiAjNjA2MjY2Ow0KfQ0KDQouaWNvbi1iZyB7DQogIGZvbnQtc2l6ZTogMjRweDsNCiAgY29sb3I6ICM0MDlFRkY7DQogIG9wYWNpdHk6IDAuMzsNCn0NCg0KLmRhdGEtY29udGVudCB7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCn0NCg0KLmRhdGEtbnVtYmVyIHsNCiAgZm9udC1zaXplOiAyOHB4Ow0KICBmb250LXdlaWdodDogYm9sZDsNCiAgY29sb3I6ICMzMDMxMzM7DQogIG1hcmdpbi1ib3R0b206IDEwcHg7DQp9DQoNCi5kYXRhLXRyZW5kIHsNCiAgZm9udC1zaXplOiAxMnB4Ow0KICBjb2xvcjogIzkwOTM5OTsNCn0NCg0KLmRhdGEtdHJlbmQgLnVwIHsNCiAgY29sb3I6ICM2N0MyM0E7DQp9DQoNCi5kYXRhLXRyZW5kIC5kb3duIHsNCiAgY29sb3I6ICNGNTZDNkM7DQp9DQoNCi5jaGFydC1yb3cgew0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KfQ0KDQouY2hhcnQtY2FyZCB7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQoNCi5jaGFydC1oZWFkZXIgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQp9DQoNCi5jaGFydC1jb250YWluZXIgew0KICBoZWlnaHQ6IDMwMHB4Ow0KfQ0KDQovKiDlk43lupTlvI/osIPmlbQgKi8NCkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE0MDBweCkgew0KICAuY2hhcnQtY29udGFpbmVyIHsNCiAgICBoZWlnaHQ6IDI1MHB4Ow0KICB9DQp9DQoNCkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEyMDBweCkgew0KICAuZWwtY29sLTYgew0KICAgIHdpZHRoOiA1MCU7DQogICAgbWFyZ2luLWJvdHRvbTogMjBweDsNCiAgfQ0KfQ0KDQpAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkgew0KICAuZWwtY29sLTYgew0KICAgIHdpZHRoOiAxMDAlOw0KICB9DQoNCiAgLmNoYXJ0LWNvbnRhaW5lciB7DQogICAgaGVpZ2h0OiAyMDBweDsNCiAgfQ0KfQ0K"},{"version":3,"sources":["Statistics.vue"],"names":[],"mappings":";AAgdA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Statistics.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"statistics\">\r\n    <!-- 数据概览卡片 -->\r\n    <el-row :gutter=\"20\" class=\"data-overview\">\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\" class=\"data-card\">\r\n          <div class=\"data-header\">\r\n            <div class=\"data-title\">总任务数</div>\r\n            <i class=\"el-icon-s-order icon-bg\"></i>\r\n          </div>\r\n          <div class=\"data-content\">\r\n            <div class=\"data-number\">{{ statistics.totalTasks }}</div>\r\n            <div class=\"data-trend\">\r\n              <span :class=\"{'up': statistics.taskGrowth > 0, 'down': statistics.taskGrowth < 0}\">\r\n                {{ Math.abs(statistics.taskGrowth) }}%\r\n                <i :class=\"statistics.taskGrowth > 0 ? 'el-icon-top' : 'el-icon-bottom'\"></i>\r\n              </span>\r\n              较上月\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\" class=\"data-card\">\r\n          <div class=\"data-header\">\r\n            <div class=\"data-title\">完成率</div>\r\n            <i class=\"el-icon-s-data icon-bg\"></i>\r\n          </div>\r\n          <div class=\"data-content\">\r\n            <div class=\"data-number\">{{ statistics.completionRate }}%</div>\r\n            <div class=\"data-trend\">\r\n              <span :class=\"{'up': statistics.completionGrowth > 0, 'down': statistics.completionGrowth < 0}\">\r\n                {{ Math.abs(statistics.completionGrowth) }}%\r\n                <i :class=\"statistics.completionGrowth > 0 ? 'el-icon-top' : 'el-icon-bottom'\"></i>\r\n              </span>\r\n              较上月\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\" class=\"data-card\">\r\n          <div class=\"data-header\">\r\n            <div class=\"data-title\">异常发现</div>\r\n            <i class=\"el-icon-warning icon-bg\"></i>\r\n          </div>\r\n          <div class=\"data-content\">\r\n            <div class=\"data-number\">{{ statistics.totalIssues }}</div>\r\n            <div class=\"data-trend\">\r\n              <span :class=\"{'down': statistics.issueGrowth > 0, 'up': statistics.issueGrowth < 0}\">\r\n                {{ Math.abs(statistics.issueGrowth) }}%\r\n                <i :class=\"statistics.issueGrowth > 0 ? 'el-icon-top' : 'el-icon-bottom'\"></i>\r\n              </span>\r\n              较上月\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\" class=\"data-card\">\r\n          <div class=\"data-header\">\r\n            <div class=\"data-title\">处理及时率</div>\r\n            <i class=\"el-icon-time icon-bg\"></i>\r\n          </div>\r\n          <div class=\"data-content\">\r\n            <div class=\"data-number\">{{ statistics.responseRate }}%</div>\r\n            <div class=\"data-trend\">\r\n              <span :class=\"{'up': statistics.responseGrowth > 0, 'down': statistics.responseGrowth < 0}\">\r\n                {{ Math.abs(statistics.responseGrowth) }}%\r\n                <i :class=\"statistics.responseGrowth > 0 ? 'el-icon-top' : 'el-icon-bottom'\"></i>\r\n              </span>\r\n              较上月\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 图表区域 -->\r\n    <el-row :gutter=\"20\" class=\"chart-row\">\r\n      <el-col :span=\"16\">\r\n        <el-card shadow=\"hover\" class=\"chart-card\">\r\n          <div slot=\"header\" class=\"chart-header\">\r\n            <span>任务趋势分析</span>\r\n            <el-radio-group v-model=\"trendTimeRange\" size=\"small\">\r\n              <el-radio-button label=\"week\">周</el-radio-button>\r\n              <el-radio-button label=\"month\">月</el-radio-button>\r\n              <el-radio-button label=\"year\">年</el-radio-button>\r\n            </el-radio-group>\r\n          </div>\r\n          <div ref=\"trendChart\" class=\"chart-container\"></div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card shadow=\"hover\" class=\"chart-card\">\r\n          <div slot=\"header\" class=\"chart-header\">\r\n            <span>任务类型分布</span>\r\n          </div>\r\n          <div ref=\"typeChart\" class=\"chart-container\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row :gutter=\"20\" class=\"chart-row\">\r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"hover\" class=\"chart-card\">\r\n          <div slot=\"header\" class=\"chart-header\">\r\n            <span>区域任务热力图</span>\r\n          </div>\r\n          <div ref=\"areaChart\" class=\"chart-container\"></div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"hover\" class=\"chart-card\">\r\n          <div slot=\"header\" class=\"chart-header\">\r\n            <span>异常类型分析</span>\r\n          </div>\r\n          <div ref=\"issueChart\" class=\"chart-container\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n  name: 'Statistics',\r\n  data() {\r\n    return {\r\n      // 时间范围选择\r\n      trendTimeRange: 'month',\r\n      // 统计数据\r\n      statistics: {\r\n        totalTasks: 256,\r\n        taskGrowth: 12.5,\r\n        completionRate: 92,\r\n        completionGrowth: 3.2,\r\n        totalIssues: 15,\r\n        issueGrowth: -8.5,\r\n        responseRate: 95,\r\n        responseGrowth: 2.1\r\n      },\r\n      // 图表实例\r\n      charts: {\r\n        trend: null,\r\n        type: null,\r\n        area: null,\r\n        issue: null\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    trendTimeRange() {\r\n      this.initTrendChart()\r\n    }\r\n  },\r\n  methods: {\r\n    // 初始化所有图表\r\n    initCharts() {\r\n      this.initTrendChart()\r\n      this.initTypeChart()\r\n      this.initAreaChart()\r\n      this.initIssueChart()\r\n    },\r\n\r\n    // 初始化趋势图表\r\n    initTrendChart() {\r\n      if (!this.charts.trend) {\r\n        this.charts.trend = echarts.init(this.$refs.trendChart)\r\n      }\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['总任务数', '已完成', '异常数']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: this.getTrendTimeData()\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '总任务数',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: this.getRandomData(12, 50, 100),\r\n            itemStyle: {\r\n              color: '#409EFF'\r\n            },\r\n            areaStyle: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                { offset: 0, color: 'rgba(64,158,255,0.3)' },\r\n                { offset: 1, color: 'rgba(64,158,255,0.1)' }\r\n              ])\r\n            }\r\n          },\r\n          {\r\n            name: '已完成',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: this.getRandomData(12, 40, 90),\r\n            itemStyle: {\r\n              color: '#67C23A'\r\n            },\r\n            areaStyle: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                { offset: 0, color: 'rgba(103,194,58,0.3)' },\r\n                { offset: 1, color: 'rgba(103,194,58,0.1)' }\r\n              ])\r\n            }\r\n          },\r\n          {\r\n            name: '异常数',\r\n            type: 'bar',\r\n            data: this.getRandomData(12, 0, 10),\r\n            itemStyle: {\r\n              color: '#F56C6C'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n\r\n      this.charts.trend.setOption(option)\r\n    },\r\n\r\n    // 初始化类型分布图表\r\n    initTypeChart() {\r\n      if (!this.charts.type) {\r\n        this.charts.type = echarts.init(this.$refs.typeChart)\r\n      }\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left'\r\n        },\r\n        series: [\r\n          {\r\n            name: '任务类型',\r\n            type: 'pie',\r\n            radius: ['50%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: '#fff',\r\n              borderWidth: 2\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: '20',\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: [\r\n              { value: 148, name: '日常巡检' },\r\n              { value: 65, name: '专项巡检' },\r\n              { value: 43, name: '临时巡检' }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n\r\n      this.charts.type.setOption(option)\r\n    },\r\n\r\n    // 初始化区域热力图\r\n    initAreaChart() {\r\n      if (!this.charts.area) {\r\n        this.charts.area = echarts.init(this.$refs.areaChart)\r\n      }\r\n\r\n      const option = {\r\n        tooltip: {\r\n          position: 'top'\r\n        },\r\n        grid: {\r\n          top: '10%',\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['车间A', '车间B', '车间C', '车间D'],\r\n          splitArea: {\r\n            show: true\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: ['工厂1', '工厂2', '工厂3'],\r\n          splitArea: {\r\n            show: true\r\n          }\r\n        },\r\n        visualMap: {\r\n          min: 0,\r\n          max: 100,\r\n          calculable: true,\r\n          orient: 'horizontal',\r\n          left: 'center',\r\n          bottom: '0%',\r\n          inRange: {\r\n            color: ['#e9f7f4', '#67C23A']\r\n          }\r\n        },\r\n        series: [{\r\n          name: '任务数量',\r\n          type: 'heatmap',\r\n          data: this.getHeatmapData(),\r\n          label: {\r\n            show: true\r\n          },\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }]\r\n      }\r\n\r\n      this.charts.area.setOption(option)\r\n    },\r\n\r\n    // 初始化异常分析图表\r\n    initIssueChart() {\r\n      if (!this.charts.issue) {\r\n        this.charts.issue = echarts.init(this.$refs.issueChart)\r\n      }\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value'\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: ['设备故障', '参数异常', '安全隐患', '环境问题', '其他']\r\n        },\r\n        series: [\r\n          {\r\n            name: '异常数量',\r\n            type: 'bar',\r\n            data: [5, 4, 3, 2, 1],\r\n            itemStyle: {\r\n              color: function(params) {\r\n                const colors = ['#F56C6C', '#E6A23C', '#409EFF', '#67C23A', '#909399']\r\n                return colors[params.dataIndex]\r\n              }\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: 'right'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n\r\n      this.charts.issue.setOption(option)\r\n    },\r\n\r\n    // 获取趋势图时间数据\r\n    getTrendTimeData() {\r\n      const now = new Date()\r\n      const data = []\r\n\r\n      if (this.trendTimeRange === 'week') {\r\n        const days = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\n        for (let i = 6; i >= 0; i--) {\r\n          data.push(days[new Date(now - i * 24 * 3600 * 1000).getDay()])\r\n        }\r\n      } else if (this.trendTimeRange === 'month') {\r\n        for (let i = 11; i >= 0; i--) {\r\n          const date = new Date(now.getFullYear(), now.getMonth() - i, 1)\r\n          data.push(`${date.getMonth() + 1}月`)\r\n        }\r\n      } else {\r\n        for (let i = 11; i >= 0; i--) {\r\n          data.push(`${now.getFullYear() - i}年`)\r\n        }\r\n      }\r\n\r\n      return data\r\n    },\r\n\r\n    // 生成随机数据\r\n    getRandomData(length, min, max) {\r\n      return Array.from({ length }, () =>\r\n          Math.floor(Math.random() * (max - min + 1)) + min\r\n      )\r\n    },\r\n\r\n    // 生成热力图数据\r\n    getHeatmapData() {\r\n      const data = []\r\n      for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          data.push([j, i, Math.floor(Math.random() * 100)])\r\n        }\r\n      }\r\n      return data\r\n    },\r\n\r\n    // 窗口大小改变时重绘图表\r\n    handleResize() {\r\n      Object.values(this.charts).forEach(chart => {\r\n        chart && chart.resize()\r\n      })\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initCharts()\r\n    window.addEventListener('resize', this.handleResize)\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.handleResize)\r\n    Object.values(this.charts).forEach(chart => {\r\n      chart && chart.dispose()\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.statistics {\r\n  padding: 20px;\r\n}\r\n\r\n.data-overview {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.data-card {\r\n  height: 120px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.data-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.data-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.data-title {\r\n  font-size: 16px;\r\n  color: #606266;\r\n}\r\n\r\n.icon-bg {\r\n  font-size: 24px;\r\n  color: #409EFF;\r\n  opacity: 0.3;\r\n}\r\n\r\n.data-content {\r\n  position: relative;\r\n}\r\n\r\n.data-number {\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.data-trend {\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.data-trend .up {\r\n  color: #67C23A;\r\n}\r\n\r\n.data-trend .down {\r\n  color: #F56C6C;\r\n}\r\n\r\n.chart-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.chart-container {\r\n  height: 300px;\r\n}\r\n\r\n/* 响应式调整 */\r\n@media screen and (max-width: 1400px) {\r\n  .chart-container {\r\n    height: 250px;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 1200px) {\r\n  .el-col-6 {\r\n    width: 50%;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .el-col-6 {\r\n    width: 100%;\r\n  }\r\n\r\n  .chart-container {\r\n    height: 200px;\r\n  }\r\n}\r\n</style>"]}]}