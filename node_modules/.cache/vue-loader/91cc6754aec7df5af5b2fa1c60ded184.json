{"remainingRequest":"D:\\safety-management-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\safety-management-system\\src\\views\\Statistics.vue?vue&type=style&index=0&id=303da50a&prod&scoped=true&lang=css","dependencies":[{"path":"D:\\safety-management-system\\src\\views\\Statistics.vue","mtime":1735624929418},{"path":"D:\\safety-management-system\\node_modules\\css-loader\\dist\\cjs.js","mtime":1735624900520},{"path":"D:\\safety-management-system\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1735624925514},{"path":"D:\\safety-management-system\\node_modules\\postcss-loader\\src\\index.js","mtime":1735624914790},{"path":"D:\\safety-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1735624895241},{"path":"D:\\safety-management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1735624925511}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouc3RhdGlzdGljcyB7DQogIHBhZGRpbmc6IDIwcHg7DQp9DQoNCi8qIOaVsOaNruWNoeeJh+agt+W8jyAqLw0KLmRhdGEtb3ZlcnZpZXcgew0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KfQ0KDQouZGF0YS1jYXJkIHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBvdmVyZmxvdzogaGlkZGVuOw0KICBoZWlnaHQ6IDEyMHB4Ow0KICBjdXJzb3I6IHBvaW50ZXI7DQogIHRyYW5zaXRpb246IGFsbCAwLjNzOw0KICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjZmZmZmZmIDAlLCAjZjVmN2ZhIDEwMCUpOw0KfQ0KDQouZGF0YS1jYXJkOjpiZWZvcmUgew0KICBjb250ZW50OiAnJzsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICB0b3A6IDA7DQogIGxlZnQ6IDA7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDEwMCU7DQogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgyNTUsMjU1LDI1NSwwLjEpIDAlLCByZ2JhKDI1NSwyNTUsMjU1LDAuNSkgNTAlLCByZ2JhKDI1NSwyNTUsMjU1LDAuMSkgMTAwJSk7DQogIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7DQogIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjZzOw0KfQ0KDQouZGF0YS1jYXJkOmhvdmVyIHsNCiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01cHgpOw0KICBib3gtc2hhZG93OiAwIDhweCAxNnB4IHJnYmEoMCwwLDAsMC4xKTsNCn0NCg0KLmRhdGEtY2FyZDpob3Zlcjo6YmVmb3JlIHsNCiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpOw0KfQ0KDQouZGF0YS1oZWFkZXIgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQoNCi5kYXRhLXRpdGxlIHsNCiAgZm9udC1zaXplOiAxNnB4Ow0KICBjb2xvcjogIzYwNjI2NjsNCn0NCg0KLmljb24td3JhcHBlciB7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgd2lkdGg6IDQwcHg7DQogIGhlaWdodDogNDBweDsNCiAgYm9yZGVyLXJhZGl1czogNTAlOw0KICBiYWNrZ3JvdW5kOiByZ2JhKDY0LCAxNTgsIDI1NSwgMC4xKTsNCiAgZGlzcGxheTogZmxleDsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQp9DQoNCi5pY29uLXdyYXBwZXIuc3VjY2VzcyB7DQogIGJhY2tncm91bmQ6IHJnYmEoMTAzLCAxOTQsIDU4LCAwLjEpOw0KfQ0KDQouaWNvbi13cmFwcGVyLndhcm5pbmcgew0KICBiYWNrZ3JvdW5kOiByZ2JhKDIzMCwgMTYyLCA2MCwgMC4xKTsNCn0NCg0KLmljb24td3JhcHBlci5pbmZvIHsNCiAgYmFja2dyb3VuZDogcmdiYSgxNDQsIDE0NywgMTUzLCAwLjEpOw0KfQ0KDQouaWNvbi13cmFwcGVyIGkgew0KICBmb250LXNpemU6IDIwcHg7DQogIGNvbG9yOiAjNDA5RUZGOw0KICB6LWluZGV4OiAxOw0KfQ0KDQouaWNvbi13cmFwcGVyLnN1Y2Nlc3MgaSB7DQogIGNvbG9yOiAjNjdDMjNBOw0KfQ0KDQouaWNvbi13cmFwcGVyLndhcm5pbmcgaSB7DQogIGNvbG9yOiAjRTZBMjNDOw0KfQ0KDQouaWNvbi13cmFwcGVyLmluZm8gaSB7DQogIGNvbG9yOiAjOTA5Mzk5Ow0KfQ0KDQoucHVsc2UtcmluZyB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgd2lkdGg6IDEwMCU7DQogIGhlaWdodDogMTAwJTsNCiAgYm9yZGVyLXJhZGl1czogNTAlOw0KICBhbmltYXRpb246IHB1bHNlIDJzIGluZmluaXRlOw0KICBiYWNrZ3JvdW5kOiByZ2JhKDY0LCAxNTgsIDI1NSwgMC4yKTsNCn0NCg0KLnB1bHNlLXJpbmcuc3VjY2VzcyB7DQogIGJhY2tncm91bmQ6IHJnYmEoMTAzLCAxOTQsIDU4LCAwLjIpOw0KfQ0KDQoucHVsc2UtcmluZy53YXJuaW5nIHsNCiAgYmFja2dyb3VuZDogcmdiYSgyMzAsIDE2MiwgNjAsIDAuMik7DQp9DQoNCi5wdWxzZS1yaW5nLmluZm8gew0KICBiYWNrZ3JvdW5kOiByZ2JhKDE0NCwgMTQ3LCAxNTMsIDAuMik7DQp9DQoNCkBrZXlmcmFtZXMgcHVsc2Ugew0KICAwJSB7DQogICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTsNCiAgICBvcGFjaXR5OiAwLjg7DQogIH0NCiAgNzAlIHsNCiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7DQogICAgb3BhY2l0eTogMC4zOw0KICB9DQogIDEwMCUgew0KICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7DQogICAgb3BhY2l0eTogMC44Ow0KICB9DQp9DQoNCi5kYXRhLWNvbnRlbnQgew0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQp9DQoNCi5kYXRhLW51bWJlciB7DQogIGZvbnQtc2l6ZTogMjhweDsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogIGNvbG9yOiAjMzAzMTMzOw0KICBtYXJnaW4tYm90dG9tOiAxMHB4Ow0KfQ0KDQouZGF0YS10cmVuZCB7DQogIGZvbnQtc2l6ZTogMTJweDsNCiAgY29sb3I6ICM5MDkzOTk7DQp9DQoNCi5kYXRhLXRyZW5kIC51cCB7DQogIGNvbG9yOiAjNjdDMjNBOw0KfQ0KDQouZGF0YS10cmVuZCAuZG93biB7DQogIGNvbG9yOiAjRjU2QzZDOw0KfQ0KDQovKiDlm77ooajmoLflvI8gKi8NCi5jaGFydC1yb3cgew0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KfQ0KDQouY2hhcnQtY2FyZCB7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg1MHB4KTsNCiAgb3BhY2l0eTogMDsNCiAgYW5pbWF0aW9uOiBzbGlkZVVwIDAuOHMgZm9yd2FyZHM7DQp9DQoNCkBrZXlmcmFtZXMgc2xpZGVVcCB7DQogIHRvIHsNCiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7DQogICAgb3BhY2l0eTogMTsNCiAgfQ0KfQ0KDQouY2hhcnQtY2FyZDpudGgtY2hpbGQoMSkgeyBhbmltYXRpb24tZGVsYXk6IDAuMnM7IH0NCi5jaGFydC1jYXJkOm50aC1jaGlsZCgyKSB7IGFuaW1hdGlvbi1kZWxheTogMC40czsgfQ0KLmNoYXJ0LWNhcmQ6bnRoLWNoaWxkKDMpIHsgYW5pbWF0aW9uLWRlbGF5OiAwLjZzOyB9DQouY2hhcnQtY2FyZDpudGgtY2hpbGQoNCkgeyBhbmltYXRpb24tZGVsYXk6IDAuOHM7IH0NCg0KLmNoYXJ0LWhlYWRlciB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCn0NCg0KLmNoYXJ0LWNvbnRhaW5lciB7DQogIGhlaWdodDogMzAwcHg7DQp9DQoNCi8qIOWTjeW6lOW8j+iwg+aVtCAqLw0KQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQwMHB4KSB7DQogIC5jaGFydC1jb250YWluZXIgew0KICAgIGhlaWdodDogMjUwcHg7DQogIH0NCn0NCg0KQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTIwMHB4KSB7DQogIC5lbC1jb2wtNiB7DQogICAgd2lkdGg6IDUwJTsNCiAgICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KICB9DQp9DQoNCkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7DQogIC5lbC1jb2wtNiB7DQogICAgd2lkdGg6IDEwMCU7DQogIH0NCg0KICAuY2hhcnQtY29udGFpbmVyIHsNCiAgICBoZWlnaHQ6IDIwMHB4Ow0KICB9DQp9DQoNCi8qIOWKoOi9veWKqOeUu+agt+W8jyAqLw0KLmVsLWxvYWRpbmctc3Bpbm5lciB7DQogIC5lbC1pY29uLWxvYWRpbmcgew0KICAgIGZvbnQtc2l6ZTogMzBweDsNCiAgfQ0KDQogIC5lbC1sb2FkaW5nLXRleHQgew0KICAgIGZvbnQtc2l6ZTogMTZweDsNCiAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KICB9DQp9DQo="},{"version":3,"sources":["Statistics.vue"],"names":[],"mappings":";AAwkfile":"Statistics.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"statistics\">\r\n    <div v-loading.fullscreen.lock=\"loading\"\r\n         element-loading-text=\"数据加载中...\"\r\n         element-loading-spinner=\"el-icon-loading\"\r\n         element-loading-background=\"rgba(0, 0, 0, 0.8)\">\r\n      <!-- 数据概览卡片 -->\r\n      <el-row :gutter=\"20\" class=\"data-overview\">\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\" class=\"data-card\" :body-style=\"{ padding: '20px' }\">\r\n            <div class=\"data-header\">\r\n              <div class=\"data-title\">总任务数</div>\r\n              <div class=\"icon-wrapper\">\r\n                <i class=\"el-icon-s-order\"></i>\r\n                <div class=\"pulse-ring\"></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"data-content\">\r\n              <div class=\"data-number\">\r\n                <count-to\r\n                    :start-val=\"0\"\r\n                    :end-val=\"statistics.totalTasks\"\r\n                    :duration=\"2500\"\r\n                    :autoplay=\"true\"\r\n                    separator=\",\"\r\n                ></count-to>\r\n              </div>\r\n              <div class=\"data-trend\">\r\n                <span :class=\"{'up': statistics.taskGrowth > 0, 'down': statistics.taskGrowth < 0}\">\r\n                  <count-to\r\n                      :start-val=\"0\"\r\n                      :end-val=\"Math.abs(statistics.taskGrowth)\"\r\n                      :duration=\"2000\"\r\n                      :decimals=\"1\"\r\n                      :autoplay=\"true\"\r\n                  ></count-to>%\r\n                  <i :class=\"statistics.taskGrowth > 0 ? 'el-icon-top' : 'el-icon-bottom'\"></i>\r\n                </span>\r\n                较上月\r\n              </div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\" class=\"data-card\" :body-style=\"{ padding: '20px' }\">\r\n            <div class=\"data-header\">\r\n              <div class=\"data-title\">完成率</div>\r\n              <div class=\"icon-wrapper success\">\r\n                <i class=\"el-icon-s-data\"></i>\r\n                <div class=\"pulse-ring success\"></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"data-content\">\r\n              <div class=\"data-number\">\r\n                <count-to\r\n                    :start-val=\"0\"\r\n                    :end-val=\"statistics.completionRate\"\r\n                    :duration=\"2500\"\r\n                    :autoplay=\"true\"\r\n                ></count-to>%\r\n              </div>\r\n              <div class=\"data-trend\">\r\n                <span :class=\"{'up': statistics.completionGrowth > 0, 'down': statistics.completionGrowth < 0}\">\r\n                  <count-to\r\n                      :start-val=\"0\"\r\n                      :end-val=\"Math.abs(statistics.completionGrowth)\"\r\n                      :duration=\"2000\"\r\n                      :decimals=\"1\"\r\n                      :autoplay=\"true\"\r\n                  ></count-to>%\r\n                  <i :class=\"statistics.completionGrowth > 0 ? 'el-icon-top' : 'el-icon-bottom'\"></i>\r\n                </span>\r\n                较上月\r\n              </div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\" class=\"data-card\" :body-style=\"{ padding: '20px' }\">\r\n            <div class=\"data-header\">\r\n              <div class=\"data-title\">异常发现</div>\r\n              <div class=\"icon-wrapper warning\">\r\n                <i class=\"el-icon-warning\"></i>\r\n                <div class=\"pulse-ring warning\"></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"data-content\">\r\n              <div class=\"data-number\">\r\n                <count-to\r\n                    :start-val=\"0\"\r\n                    :end-val=\"statistics.totalIssues\"\r\n                    :duration=\"2500\"\r\n                    :autoplay=\"true\"\r\n                ></count-to>\r\n              </div>\r\n              <div class=\"data-trend\">\r\n                <span :class=\"{'down': statistics.issueGrowth > 0, 'up': statistics.issueGrowth < 0}\">\r\n                  <count-to\r\n                      :start-val=\"0\"\r\n                      :end-val=\"Math.abs(statistics.issueGrowth)\"\r\n                      :duration=\"2000\"\r\n                      :decimals=\"1\"\r\n                      :autoplay=\"true\"\r\n                  ></count-to>%\r\n                  <i :class=\"statistics.issueGrowth > 0 ? 'el-icon-top' : 'el-icon-bottom'\"></i>\r\n                </span>\r\n                较上月\r\n              </div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\" class=\"data-card\" :body-style=\"{ padding: '20px' }\">\r\n            <div class=\"data-header\">\r\n              <div class=\"data-title\">处理及时率</div>\r\n              <div class=\"icon-wrapper info\">\r\n                <i class=\"el-icon-time\"></i>\r\n                <div class=\"pulse-ring info\"></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"data-content\">\r\n              <div class=\"data-number\">\r\n                <count-to\r\n                    :start-val=\"0\"\r\n                    :end-val=\"statistics.responseRate\"\r\n                    :duration=\"2500\"\r\n                    :autoplay=\"true\"\r\n                ></count-to>%\r\n              </div>\r\n              <div class=\"data-trend\">\r\n                <span :class=\"{'up': statistics.responseGrowth > 0, 'down': statistics.responseGrowth < 0}\">\r\n                  <count-to\r\n                      :start-val=\"0\"\r\n                      :end-val=\"Math.abs(statistics.responseGrowth)\"\r\n                      :duration=\"2000\"\r\n                      :decimals=\"1\"\r\n                      :autoplay=\"true\"\r\n                  ></count-to>%\r\n                  <i :class=\"statistics.responseGrowth > 0 ? 'el-icon-top' : 'el-icon-bottom'\"></i>\r\n                </span>\r\n                较上月\r\n              </div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 图表区域 -->\r\n      <el-row :gutter=\"20\" class=\"chart-row\">\r\n        <el-col :span=\"16\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <div slot=\"header\" class=\"chart-header\">\r\n              <span>任务趋势分析</span>\r\n              <el-radio-group v-model=\"trendTimeRange\" size=\"small\">\r\n                <el-radio-button label=\"week\">周</el-radio-button>\r\n                <el-radio-button label=\"month\">月</el-radio-button>\r\n                <el-radio-button label=\"year\">年</el-radio-button>\r\n              </el-radio-group>\r\n            </div>\r\n            <div ref=\"trendChart\" class=\"chart-container\"></div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"8\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <div slot=\"header\" class=\"chart-header\">\r\n              <span>任务类型分布</span>\r\n            </div>\r\n            <div ref=\"typeChart\" class=\"chart-container\"></div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row :gutter=\"20\" class=\"chart-row\">\r\n        <el-col :span=\"12\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <div slot=\"header\" class=\"chart-header\">\r\n              <span>区域任务热力图</span>\r\n            </div>\r\n            <div ref=\"areaChart\" class=\"chart-container\"></div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-card shadow=\"hover\" class=\"chart-card\">\r\n            <div slot=\"header\" class=\"chart-header\">\r\n              <span>异常类型分析</span>\r\n            </div>\r\n            <div ref=\"issueChart\" class=\"chart-container\"></div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport * as echarts from 'echarts'\r\nimport CountTo from 'vue-count-to'\r\n\r\nexport default {\r\n  name: 'Statistics',\r\n  components: {\r\n    CountTo\r\n  },\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      trendTimeRange: 'month',\r\n      timer: null,\r\n      statistics: {\r\n        totalTasks: 256,\r\n        taskGrowth: 12.5,\r\n        completionRate: 92,\r\n        completionGrowth: 3.2,\r\n        totalIssues: 15,\r\n        issueGrowth: -8.5,\r\n        responseRate: 95,\r\n        responseGrowth: 2.1\r\n      },\r\n      charts: {\r\n        trend: null,\r\n        type: null,\r\n        area: null,\r\n        issue: null\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    trendTimeRange() {\r\n      this.initTrendChart()\r\n    }\r\n  },\r\n  methods: {\r\n    // 初始化所有图表\r\n    initCharts() {\r\n      this.initTrendChart()\r\n      this.initTypeChart()\r\n      this.initAreaChart()\r\n      this.initIssueChart()\r\n    },\r\n\r\n    // 初始化趋势图表\r\n    initTrendChart() {\r\n      if (!this.charts.trend) {\r\n        this.charts.trend = echarts.init(this.$refs.trendChart)\r\n      }\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['总任务数', '已完成', '异常数']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: this.getTrendTimeData(),\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#666'\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#666'\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '总任务数',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: this.getRandomData(12, 40, 90),\r\n            animationDuration: 2000,\r\n            animationEasing: 'cubicInOut',\r\n            itemStyle: {\r\n              color: '#409EFF'\r\n            }\r\n          },\r\n          {\r\n            name: '已完成',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: this.getRandomData(12, 30, 80),\r\n            animationDuration: 2000,\r\n            animationEasing: 'cubicInOut',\r\n            itemStyle: {\r\n              color: '#67C23A'\r\n            }\r\n          },\r\n          {\r\n            name: '异常数',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: this.getRandomData(12, 0, 20),\r\n            animationDuration: 2000,\r\n            animationEasing: 'cubicInOut',\r\n            itemStyle: {\r\n              color: '#F56C6C'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n\r\n      this.charts.trend.setOption(option)\r\n    },\r\n\r\n    // 初始化类型分布图表\r\n    initTypeChart() {\r\n      if (!this.charts.type) {\r\n        this.charts.type = echarts.init(this.$refs.typeChart)\r\n      }\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          right: 10,\r\n          top: 'center',\r\n          data: ['日常巡检', '专项巡检', '临时巡检']\r\n        },\r\n        series: [\r\n          {\r\n            name: '任务类型',\r\n            type: 'pie',\r\n            radius: ['50%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: '#fff',\r\n              borderWidth: 2\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: '20',\r\n                fontWeight: 'bold'\r\n              },\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: [\r\n              { value: 50, name: '日常巡检' },\r\n              { value: 30, name: '专项巡检' },\r\n              { value: 20, name: '临时巡检' }\r\n            ],\r\n            animationDuration: 2000,\r\n            animationEasing: 'cubicInOut'\r\n          }\r\n        ]\r\n      }\r\n\r\n      this.charts.type.setOption(option)\r\n    },\r\n\r\n    // 初始化区域热力图\r\n    initAreaChart() {\r\n      if (!this.charts.area) {\r\n        this.charts.area = echarts.init(this.$refs.areaChart)\r\n      }\r\n\r\n      const option = {\r\n        tooltip: {\r\n          position: 'top'\r\n        },\r\n        grid: {\r\n          top: '10%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['车间A', '车间B', '车间C', '车间D'],\r\n          splitArea: {\r\n            show: true\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: ['工厂1', '工厂2', '工厂3'],\r\n          splitArea: {\r\n            show: true\r\n          }\r\n        },\r\n        visualMap: {\r\n          min: 0,\r\n          max: 100,\r\n          calculable: true,\r\n          orient: 'horizontal',\r\n          left: 'center',\r\n          bottom: '0%',\r\n          inRange: {\r\n            color: ['#e9f7fe', '#409EFF']\r\n          }\r\n        },\r\n        series: [{\r\n          name: '任务数量',\r\n          type: 'heatmap',\r\n          data: this.getHeatmapData(),\r\n          label: {\r\n            show: true\r\n          },\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n          animationDuration: 2000,\r\n          animationEasing: 'cubicInOut'\r\n        }]\r\n      }\r\n\r\n      this.charts.area.setOption(option)\r\n    },\r\n\r\n    // 初始化异常类型分析图表\r\n    initIssueChart() {\r\n      if (!this.charts.issue) {\r\n        this.charts.issue = echarts.init(this.$refs.issueChart)\r\n      }\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value'\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: ['设备故障', '参数异常', '安全隐患', '环境问题', '其他']\r\n        },\r\n        series: [\r\n          {\r\n            name: '异常数量',\r\n            type: 'bar',\r\n            data: [5, 4, 3, 2, 1],\r\n            itemStyle: {\r\n              color: function(params) {\r\n                const colors = ['#F56C6C', '#E6A23C', '#409EFF', '#67C23A', '#909399']\r\n                return colors[params.dataIndex]\r\n              }\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: 'right'\r\n            },\r\n            animationDuration: 2000,\r\n            animationEasing: 'cubicInOut'\r\n          }\r\n        ]\r\n      }\r\n\r\n      this.charts.issue.setOption(option)\r\n    },\r\n\r\n    // 开始实时数据更新\r\n    startRealTimeUpdate() {\r\n      this.timer = setInterval(() => {\r\n        // 更新总任务数\r\n        this.statistics.totalTasks += Math.floor(Math.random() * 5)\r\n\r\n        // 更新趋势图数据\r\n        if (this.charts.trend) {\r\n          const option = this.charts.trend.getOption()\r\n          const data = option.series[0].data\r\n          data.shift()\r\n          data.push(this.getRandomData(1, 40, 90)[0])\r\n\r\n          this.charts.trend.setOption({\r\n            series: [{\r\n              data: data\r\n            }]\r\n          })\r\n        }\r\n      }, 5000)\r\n    },\r\n\r\n    // 获取趋势图时间数据\r\n    getTrendTimeData() {\r\n      const now = new Date()\r\n      const data = []\r\n\r\n      if (this.trendTimeRange === 'week') {\r\n        const days = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\n        for (let i = 6; i >= 0; i--) {\r\n          data.push(days[new Date(now - i * 24 * 3600 * 1000).getDay()])\r\n        }\r\n      } else if (this.trendTimeRange === 'month') {\r\n        for (let i = 11; i >= 0; i--) {\r\n          const date = new Date(now.getFullYear(), now.getMonth() - i, 1)\r\n          data.push(`${date.getMonth() + 1}月`)\r\n        }\r\n      } else {\r\n        for (let i = 11; i >= 0; i--) {\r\n          data.push(`${now.getFullYear() - i}年`)\r\n        }\r\n      }\r\n\r\n      return data\r\n    },\r\n\r\n    // 生成随机数据\r\n    getRandomData(length, min, max) {\r\n      return Array.from({ length }, () =>\r\n          Math.floor(Math.random() * (max - min + 1)) + min\r\n      )\r\n    },\r\n\r\n    // 生成热力图数据\r\n    getHeatmapData() {\r\n      const data = []\r\n      for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          data.push([j, i, Math.floor(Math.random() * 100)])\r\n        }\r\n      }\r\n      return data\r\n    },\r\n\r\n    // 窗口大小改变时重绘图表\r\n    handleResize() {\r\n      Object.values(this.charts).forEach(chart => {\r\n        chart && chart.resize()\r\n      })\r\n    }\r\n  },\r\n  mounted() {\r\n    // 模拟加载过程\r\n    setTimeout(() => {\r\n      this.loading = false\r\n      this.initCharts()\r\n      this.startRealTimeUpdate()\r\n      window.addEventListener('resize', this.handleResize)\r\n    }, 1500)\r\n  },\r\n  beforeDestroy() {\r\n    if (this.timer) {\r\n      clearInterval(this.timer)\r\n    }\r\n    window.removeEventListener('resize', this.handleResize)\r\n    Object.values(this.charts).forEach(chart => {\r\n      chart && chart.dispose()\r\n    })\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.statistics {\r\n  padding: 20px;\r\n}\r\n\r\n/* 数据卡片样式 */\r\n.data-overview {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.data-card {\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 120px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  background: linear-gradient(135deg, #ffffff 0%, #f5f7fa 100%);\r\n}\r\n\r\n.data-card::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.5) 50%, rgba(255,255,255,0.1) 100%);\r\n  transform: translateX(-100%);\r\n  transition: transform 0.6s;\r\n}\r\n\r\n.data-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 16px rgba(0,0,0,0.1);\r\n}\r\n\r\n.data-card:hover::before {\r\n  transform: translateX(100%);\r\n}\r\n\r\n.data-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.data-title {\r\n  font-size: 16px;\r\n  color: #606266;\r\n}\r\n\r\n.icon-wrapper {\r\n  position: relative;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background: rgba(64, 158, 255, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.icon-wrapper.success {\r\n  background: rgba(103, 194, 58, 0.1);\r\n}\r\n\r\n.icon-wrapper.warning {\r\n  background: rgba(230, 162, 60, 0.1);\r\n}\r\n\r\n.icon-wrapper.info {\r\n  background: rgba(144, 147, 153, 0.1);\r\n}\r\n\r\n.icon-wrapper i {\r\n  font-size: 20px;\r\n  color: #409EFF;\r\n  z-index: 1;\r\n}\r\n\r\n.icon-wrapper.success i {\r\n  color: #67C23A;\r\n}\r\n\r\n.icon-wrapper.warning i {\r\n  color: #E6A23C;\r\n}\r\n\r\n.icon-wrapper.info i {\r\n  color: #909399;\r\n}\r\n\r\n.pulse-ring {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  animation: pulse 2s infinite;\r\n  background: rgba(64, 158, 255, 0.2);\r\n}\r\n\r\n.pulse-ring.success {\r\n  background: rgba(103, 194, 58, 0.2);\r\n}\r\n\r\n.pulse-ring.warning {\r\n  background: rgba(230, 162, 60, 0.2);\r\n}\r\n\r\n.pulse-ring.info {\r\n  background: rgba(144, 147, 153, 0.2);\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    transform: scale(0.95);\r\n    opacity: 0.8;\r\n  }\r\n  70% {\r\n    transform: scale(1.1);\r\n    opacity: 0.3;\r\n  }\r\n  100% {\r\n    transform: scale(0.95);\r\n    opacity: 0.8;\r\n  }\r\n}\r\n\r\n.data-content {\r\n  position: relative;\r\n}\r\n\r\n.data-number {\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.data-trend {\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.data-trend .up {\r\n  color: #67C23A;\r\n}\r\n\r\n.data-trend .down {\r\n  color: #F56C6C;\r\n}\r\n\r\n/* 图表样式 */\r\n.chart-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n  transform: translateY(50px);\r\n  opacity: 0;\r\n  animation: slideUp 0.8s forwards;\r\n}\r\n\r\n@keyframes slideUp {\r\n  to {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.chart-card:nth-child(1) { animation-delay: 0.2s; }\r\n.chart-card:nth-child(2) { animation-delay: 0.4s; }\r\n.chart-card:nth-child(3) { animation-delay: 0.6s; }\r\n.chart-card:nth-child(4) { animation-delay: 0.8s; }\r\n\r\n.chart-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.chart-container {\r\n  height: 300px;\r\n}\r\n\r\n/* 响应式调整 */\r\n@media screen and (max-width: 1400px) {\r\n  .chart-container {\r\n    height: 250px;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 1200px) {\r\n  .el-col-6 {\r\n    width: 50%;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .el-col-6 {\r\n    width: 100%;\r\n  }\r\n\r\n  .chart-container {\r\n    height: 200px;\r\n  }\r\n}\r\n\r\n/* 加载动画样式 */\r\n.el-loading-spinner {\r\n  .el-icon-loading {\r\n    font-size: 30px;\r\n  }\r\n\r\n  .el-loading-text {\r\n    font-size: 16px;\r\n    margin-top: 10px;\r\n  }\r\n}\r\n</style>"]}]}