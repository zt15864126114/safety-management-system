{"remainingRequest":"D:\\safety-management-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\safety-management-system\\src\\views\\InspectionTask.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\safety-management-system\\src\\views\\InspectionTask.vue","mtime":1735627190741},{"path":"D:\\safety-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\safety-management-system\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\safety-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\safety-management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["InspectionTask.vue"],"names":[],"mappings":";AAmfile":"InspectionTask.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"inspection-task\">\r\n    <!-- 搜索表单 -->\r\n    <el-card class=\"search-card\">\r\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\r\n        <el-form-item label=\"任务名称\">\r\n          <el-input v-model=\"searchForm.name\" placeholder=\"请输入任务名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"任务类型\">\r\n          <el-select v-model=\"searchForm.type\" placeholder=\"请选择\">\r\n            <el-option label=\"全部\" value=\"\"></el-option>\r\n            <el-option label=\"日常巡检\" value=\"daily\"></el-option>\r\n            <el-option label=\"专项巡检\" value=\"special\"></el-option>\r\n            <el-option label=\"临时巡检\" value=\"temporary\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"执行状态\">\r\n          <el-select v-model=\"searchForm.status\" placeholder=\"请选择\">\r\n            <el-option label=\"全部\" value=\"\"></el-option>\r\n            <el-option label=\"未开始\" value=\"pending\"></el-option>\r\n            <el-option label=\"进行中\" value=\"processing\"></el-option>\r\n            <el-option label=\"已暂停\" value=\"paused\"></el-option>\r\n            <el-option label=\"已完成\" value=\"completed\"></el-option>\r\n            <el-option label=\"已失败\" value=\"failed\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n          <el-button @click=\"resetSearch\">重置</el-button>\r\n          <el-button type=\"success\" @click=\"handleAdd\">新增任务</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n\r\n    <!-- 任务列表 -->\r\n    <el-card class=\"table-card\">\r\n      <el-table\r\n          :data=\"tasksList\"\r\n          v-loading=\"loading\"\r\n          style=\"width: 100%\">\r\n        <el-table-column prop=\"name\" label=\"任务名称\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"type\" label=\"任务类型\" width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            {{ getTaskTypeName(scope.row.type) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"executor\" label=\"执行人\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"getStatusType(scope.row.status)\">\r\n              {{ getStatusName(scope.row.status) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"planStartTime\" label=\"计划开始时间\" width=\"160\"></el-table-column>\r\n        <el-table-column prop=\"planEndTime\" label=\"计划结束时间\" width=\"160\"></el-table-column>\r\n        <el-table-column prop=\"progress\" label=\"进度\" width=\"180\">\r\n          <template slot-scope=\"scope\">\r\n            <el-progress\r\n                :percentage=\"scope.row.progress\"\r\n                :status=\"getProgressStatus(scope.row)\">\r\n            </el-progress>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"250\" fixed=\"right\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n                size=\"mini\"\r\n                :type=\"scope.row.status === 'processing' ? 'warning' : 'success'\"\r\n                :disabled=\"scope.row.status === 'completed' || scope.row.status === 'failed'\"\r\n                @click=\"handleTaskControl(scope.row)\">\r\n              {{ scope.row.status === 'processing' ? '暂停' : '开始' }}\r\n            </el-button>\r\n            <el-button\r\n                size=\"mini\"\r\n                type=\"primary\"\r\n                :disabled=\"scope.row.status === 'completed'\"\r\n                @click=\"handleEdit(scope.row)\">\r\n              编辑\r\n            </el-button>\r\n            <el-button\r\n                size=\"mini\"\r\n                type=\"danger\"\r\n                @click=\"handleDelete(scope.row)\">\r\n              删除\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pagination.currentPage\"\r\n            :page-sizes=\"[10, 20, 50, 100]\"\r\n            :page-size=\"pagination.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"pagination.total\">\r\n        </el-pagination>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 任务表单对话框 -->\r\n    <el-dialog\r\n        :title=\"dialogTitle\"\r\n        :visible.sync=\"dialogVisible\"\r\n        width=\"50%\"\r\n        :before-close=\"handleDialogClose\">\r\n      <el-form\r\n          :model=\"taskForm\"\r\n          :rules=\"rules\"\r\n          ref=\"taskForm\"\r\n          label-width=\"100px\">\r\n        <el-form-item label=\"任务名称\" prop=\"name\">\r\n          <el-input v-model=\"taskForm.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"任务类型\" prop=\"type\">\r\n          <el-select v-model=\"taskForm.type\" placeholder=\"请选择任务类型\">\r\n            <el-option label=\"日常巡检\" value=\"daily\"></el-option>\r\n            <el-option label=\"专项巡检\" value=\"special\"></el-option>\r\n            <el-option label=\"临时巡检\" value=\"temporary\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"执行人\" prop=\"executor\">\r\n          <el-input v-model=\"taskForm.executor\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"计划时间\" required>\r\n          <el-col :span=\"11\">\r\n            <el-form-item prop=\"planStartTime\">\r\n              <el-date-picker\r\n                  v-model=\"taskForm.planStartTime\"\r\n                  type=\"datetime\"\r\n                  placeholder=\"开始时间\"\r\n                  style=\"width: 100%;\">\r\n              </el-date-picker>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col class=\"line\" :span=\"2\">-</el-col>\r\n          <el-col :span=\"11\">\r\n            <el-form-item prop=\"planEndTime\">\r\n              <el-date-picker\r\n                  v-model=\"taskForm.planEndTime\"\r\n                  type=\"datetime\"\r\n                  placeholder=\"结束时间\"\r\n                  style=\"width: 100%;\">\r\n              </el-date-picker>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item label=\"巡检区域\" prop=\"areas\">\r\n          <el-select\r\n              v-model=\"taskForm.areas\"\r\n              multiple\r\n              placeholder=\"请选择巡检区域\">\r\n            <el-option label=\"工厂1-车间A\" value=\"工厂1-车间A\"></el-option>\r\n            <el-option label=\"工厂1-车间B\" value=\"工厂1-车间B\"></el-option>\r\n            <el-option label=\"工厂2-车间A\" value=\"工厂2-车间A\"></el-option>\r\n            <el-option label=\"工厂2-车间B\" value=\"工厂2-车间B\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\" prop=\"description\">\r\n          <el-input\r\n              type=\"textarea\"\r\n              :rows=\"3\"\r\n              v-model=\"taskForm.description\">\r\n          </el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"handleDialogClose\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSave\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'InspectionTask',\r\n  data() {\r\n    return {\r\n      // 搜索表单\r\n      searchForm: {\r\n        name: '',\r\n        type: '',\r\n        status: ''\r\n      },\r\n      // 任务列表\r\n      tasksList: [],\r\n      // 加载状态\r\n      loading: false,\r\n      // 分页信息\r\n      pagination: {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0\r\n      },\r\n      // 对话框显示状态\r\n      dialogVisible: false,\r\n      // 对话框标题\r\n      dialogTitle: '',\r\n      // 任务表单\r\n      taskForm: {\r\n        id: null,\r\n        name: '',\r\n        type: '',\r\n        executor: '',\r\n        planStartTime: '',\r\n        planEndTime: '',\r\n        areas: [],\r\n        description: ''\r\n      },\r\n      // 表单验证规则\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入任务名称', trigger: 'blur' }\r\n        ],\r\n        type: [\r\n          { required: true, message: '请选择任务类型', trigger: 'change' }\r\n        ],\r\n        executor: [\r\n          { required: true, message: '请输入执行人', trigger: 'blur' }\r\n        ],\r\n        planStartTime: [\r\n          { required: true, message: '请选择开始时间', trigger: 'change' }\r\n        ],\r\n        planEndTime: [\r\n          { required: true, message: '请选择结束时间', trigger: 'change' }\r\n        ],\r\n        areas: [\r\n          { required: true, message: '请选择巡检区域', trigger: 'change' }\r\n        ]\r\n      },\r\n      // 模拟数据库\r\n      mockDatabase: [\r\n        {\r\n          id: 1,\r\n          name: '设备日常巡检',\r\n          type: 'daily',\r\n          executor: '张三',\r\n          status: 'processing',\r\n          progress: 60,\r\n          planStartTime: '2024-01-20 09:00:00',\r\n          planEndTime: '2024-01-20 17:00:00',\r\n          areas: ['工厂1-车间A'],\r\n          description: '日常设备巡检任务'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    // 加载任务列表\r\n    loadTasks() {\r\n      this.loading = true\r\n      setTimeout(() => {\r\n        let filteredTasks = [...this.mockDatabase]\r\n\r\n        // 根据搜索条件过滤\r\n        if (this.searchForm.name) {\r\n          filteredTasks = filteredTasks.filter(task =>\r\n              task.name.toLowerCase().includes(this.searchForm.name.toLowerCase())\r\n          )\r\n        }\r\n        if (this.searchForm.type) {\r\n          filteredTasks = filteredTasks.filter(task =>\r\n              task.type === this.searchForm.type\r\n          )\r\n        }\r\n        if (this.searchForm.status) {\r\n          filteredTasks = filteredTasks.filter(task =>\r\n              task.status === this.searchForm.status\r\n          )\r\n        }\r\n\r\n        // 计算分页\r\n        const start = (this.pagination.currentPage - 1) * this.pagination.pageSize\r\n        const end = start + this.pagination.pageSize\r\n\r\n        this.pagination.total = filteredTasks.length\r\n        this.tasksList = filteredTasks.slice(start, end)\r\n        this.loading = false\r\n      }, 500)\r\n    },\r\n\r\n    // 搜索\r\n    handleSearch() {\r\n      this.pagination.currentPage = 1\r\n      this.loadTasks()\r\n    },\r\n\r\n    // 重置搜索\r\n    resetSearch() {\r\n      this.searchForm = {\r\n        name: '',\r\n        type: '',\r\n        status: ''\r\n      }\r\n      this.handleSearch()\r\n    },\r\n\r\n    // 新增任务\r\n    handleAdd() {\r\n      this.dialogTitle = '新增任务'\r\n      this.taskForm = {\r\n        id: null,\r\n        name: '',\r\n        type: '',\r\n        executor: '',\r\n        planStartTime: '',\r\n        planEndTime: '',\r\n        areas: [],\r\n        description: ''\r\n      }\r\n      this.dialogVisible = true\r\n    },\r\n\r\n    // 编辑任务\r\n    handleEdit(row) {\r\n      this.dialogTitle = '编辑任务'\r\n      this.taskForm = {\r\n        ...row,\r\n        planStartTime: row.planStartTime ? new Date(row.planStartTime) : '',\r\n        planEndTime: row.planEndTime ? new Date(row.planEndTime) : ''\r\n      }\r\n      this.dialogVisible = true\r\n    },\r\n\r\n    // 删除任务\r\n    handleDelete(row) {\r\n      this.$confirm('确认删除该任务?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        const index = this.mockDatabase.findIndex(t => t.id === row.id)\r\n        if (index !== -1) {\r\n          this.mockDatabase.splice(index, 1)\r\n          this.$message.success('删除成功')\r\n          this.loadTasks()\r\n        }\r\n      }).catch(() => {})\r\n    },\r\n\r\n    // 保存任务\r\n    handleSave() {\r\n      this.$refs.taskForm.validate((valid) => {\r\n        if (valid) {\r\n          if (this.taskForm.id) {\r\n            // 编辑现有任务\r\n            const index = this.mockDatabase.findIndex(t => t.id === this.taskForm.id)\r\n            if (index !== -1) {\r\n              this.mockDatabase[index] = {\r\n                ...this.mockDatabase[index],\r\n                ...this.taskForm,\r\n                planStartTime: this.formatDateTime(this.taskForm.planStartTime),\r\n                planEndTime: this.formatDateTime(this.taskForm.planEndTime),\r\n                updateTime: this.formatDateTime(new Date())\r\n              }\r\n            }\r\n          } else {\r\n            // 新增任务\r\n            const newTask = {\r\n              ...this.taskForm,\r\n              id: Date.now(),\r\n              status: 'pending',\r\n              progress: 0,\r\n              planStartTime: this.formatDateTime(this.taskForm.planStartTime),\r\n              planEndTime: this.formatDateTime(this.taskForm.planEndTime),\r\n              createTime: this.formatDateTime(new Date()),\r\n              updateTime: this.formatDateTime(new Date())\r\n            }\r\n            this.mockDatabase.push(newTask)\r\n          }\r\n\r\n          this.$message.success('保存成功')\r\n          this.dialogVisible = false\r\n          this.loadTasks()\r\n        }\r\n      })\r\n    },\r\n\r\n    // 任务控制（开始/暂停）\r\n    handleTaskControl(task) {\r\n      const isStart = task.status !== 'processing'\r\n      const actionText = isStart ? '开始' : '暂停'\r\n\r\n      this.$confirm(`确认${actionText}该任务?`, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        const targetTask = this.mockDatabase.find(t => t.id === task.id)\r\n        if (targetTask) {\r\n          targetTask.status = isStart ? 'processing' : 'paused'\r\n          if (isStart) {\r\n            targetTask.progress = 0\r\n          }\r\n          this.$message.success(`${actionText}成功`)\r\n          this.loadTasks()\r\n        }\r\n      }).catch(() => {})\r\n    },\r\n\r\n    // 格式化日期时间\r\n    formatDateTime(date) {\r\n      if (!date) return ''\r\n      if (typeof date === 'string') return date\r\n\r\n      const d = new Date(date)\r\n      const year = d.getFullYear()\r\n      const month = String(d.getMonth() + 1).padStart(2, '0')\r\n      const day = String(d.getDate()).padStart(2, '0')\r\n      const hours = String(d.getHours()).padStart(2, '0')\r\n      const minutes = String(d.getMinutes()).padStart(2, '0')\r\n      const seconds = String(d.getSeconds()).padStart(2, '0')\r\n\r\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\r\n    },\r\n\r\n    // 获取任务类型名称\r\n    getTaskTypeName(type) {\r\n      const types = {\r\n        daily: '日常巡检',\r\n        special: '专项巡检',\r\n        temporary: '临时巡检'\r\n      }\r\n      return types[type] || type\r\n    },\r\n\r\n    // 获取状态类型\r\n    getStatusType(status) {\r\n      const types = {\r\n        pending: 'info',\r\n        processing: 'primary',\r\n        paused: 'warning',\r\n        completed: 'success',\r\n        failed: 'danger'\r\n      }\r\n      return types[status] || ''\r\n    },\r\n\r\n    // 获取状态名称\r\n    getStatusName(status) {\r\n      const names = {\r\n        pending: '未开始',\r\n        processing: '进行中',\r\n        paused: '已暂停',\r\n        completed: '已完成',\r\n        failed: '已失败'\r\n      }\r\n      return names[status] || status\r\n    },\r\n\r\n    // 获取进度状态\r\n    getProgressStatus(task) {\r\n      if (task.status === 'completed') return 'success'\r\n      if (task.status === 'paused') return 'warning'\r\n      if (task.status === 'failed') return 'exception'\r\n      return ''\r\n    },\r\n\r\n    // 对话框关闭处理\r\n    handleDialogClose() {\r\n      this.$refs.taskForm.resetFields()\r\n      this.dialogVisible = false\r\n    },\r\n\r\n    // 分页大小改变\r\n    handleSizeChange(val) {\r\n      this.pagination.pageSize = val\r\n      this.loadTasks()\r\n    },\r\n\r\n    // 当前页改变\r\n    handleCurrentChange(val) {\r\n      this.pagination.currentPage = val\r\n      this.loadTasks()\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.loadTasks()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.inspection-task {\r\n  padding: 20px;\r\n}\r\n\r\n.search-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.table-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n}\r\n\r\n.line {\r\n  text-align: center;\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n</style>"]}]}